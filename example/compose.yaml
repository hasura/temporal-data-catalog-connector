include:
  - path: app/connector/chinook/compose.yaml
  - path: data_quality/connector/anomaly/compose.yaml
#  - path: ../compose.yaml
services:
  engine:
    build:
      context: engine
      dockerfile_inline: |-
        FROM ghcr.io/hasura/v3-engine
        COPY ./build /md/
      pull: true
    develop:
      watch:
        - path: engine/build
          action: sync+restart
          target: /md/
    env_file:
      - engine/.env.engine
    extra_hosts:
      - local.hasura.dev=host-gateway
    labels:
      io.hasura.ddn.service-name: engine
    ports:
      - 3280:3000
  otel-collector:
    command:
      - --config=/etc/otel-collector-config.yaml
    environment:
      HASURA_DDN_PAT: ${HASURA_DDN_PAT}
    image: otel/opentelemetry-collector:0.104.0
    ports:
      - 4317:4317
      - 4318:4318
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
  promptql-playground:
    environment:
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      CORS_ORIGINS: ${CORS_ORIGINS:-https://console.hasura.io}
      ENGINE_URL: ${HASURA_DDN_URL:-http://engine:3000/v1/sql}
      LLM: ${LLM:-anthropic}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OTEL_LOG_LEVEL: trace
      LOG_LEVEL: debug
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://host.docker.internal:4317}
      PROMPTQL_SECRET_KEY: ${PROMPTQL_SECRET_KEY}
      PROMPTQL_URI: ${PROMPTQL_URI:-wss://runtime.promptql.pro.hasura.io}
    image: us-east4-docker.pkg.dev/promptql-execution-service/promptql-public/promptql-playground-local
    labels:
      io.hasura.ddn.service-name: promptql-playground
    ports:
      - 3282:5000
  metadata-init:
    image: metadata-init:latest
    depends_on:
      - engine
    environment:
      - ENGINE_BUILD_PATH=/build/metadata.json
      - CLEAN_DATABASE=False
      - DATABASE_URL=postgresql://kenstott:rN8qOh6AEMCP@ep-yellow-salad-961725.us-west-2.aws.neon.tech/hasura_config?sslmode=require
      - PYTHONPATH=/app
    volumes:
      - ./engine/build:/build
