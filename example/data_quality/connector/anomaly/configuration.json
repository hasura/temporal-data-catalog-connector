{
  "version": "5",
  "$schema": "schema.json",
  "connectionSettings": {
    "connectionUri": {
      "variable": "CONNECTION_URI"
    },
    "poolSettings": {
      "maxConnections": 50,
      "poolTimeout": 30,
      "idleTimeout": 180,
      "checkConnectionAfterIdle": 60,
      "connectionLifetime": 600
    },
    "isolationLevel": "ReadCommitted"
  },
  "metadata": {
    "tables": {
      "anomaly_analyses": {
        "schemaName": "public",
        "tableName": "anomaly_analyses",
        "columns": {
          "analysis_mode": {
            "name": "analysis_mode",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "anomalies_detected": {
            "name": "anomalies_detected",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": null
          },
          "anomalous_records_count": {
            "name": "anomalous_records_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "historical_data_size": {
            "name": "historical_data_size",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "operation_name": {
            "name": "operation_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "processed_records": {
            "name": "processed_records",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "query_id": {
            "name": "query_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "role": {
            "name": "role",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "timestamp": {
            "name": "timestamp",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "anomaly_analyses_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "anomaly_records": {
        "schemaName": "public",
        "tableName": "anomaly_records",
        "columns": {
          "analysis_id": {
            "name": "analysis_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "category": {
            "name": "category",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "reason": {
            "name": "reason",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "record_index": {
            "name": "record_index",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "risk_level": {
            "name": "risk_level",
            "type": {
              "scalarType": "risklevel"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "anomaly_records_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "anomaly_records_analysis_id_fkey": {
            "foreignSchema": "public",
            "foreignTable": "anomaly_analyses",
            "columnMapping": {
              "analysis_id": "id"
            }
          }
        },
        "description": null
      },
      "field_statistics": {
        "schemaName": "public",
        "tableName": "field_statistics",
        "columns": {
          "avg_length": {
            "name": "avg_length",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          },
          "field_name": {
            "name": "field_name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "field_type": {
            "name": "field_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "max_value": {
            "name": "max_value",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          },
          "mean_value": {
            "name": "mean_value",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          },
          "median_value": {
            "name": "median_value",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          },
          "min_value": {
            "name": "min_value",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          },
          "record_id": {
            "name": "record_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "std_dev": {
            "name": "std_dev",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          },
          "unique_count": {
            "name": "unique_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "uniqueness_ratio": {
            "name": "uniqueness_ratio",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "field_statistics_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "field_statistics_record_id_fkey": {
            "foreignSchema": "public",
            "foreignTable": "anomaly_records",
            "columnMapping": {
              "record_id": "id"
            }
          }
        },
        "description": null
      },
      "historical_data": {
        "schemaName": "public",
        "tableName": "historical_data",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "data": {
            "name": "data",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "last_updated": {
            "name": "last_updated",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "query_id": {
            "name": "query_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "record_count": {
            "name": "record_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "historical_data_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "query_concerns": {
        "schemaName": "public",
        "tableName": "query_concerns",
        "columns": {
          "analysis_id": {
            "name": "analysis_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "query_concerns_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "query_concerns_analysis_id_fkey": {
            "foreignSchema": "public",
            "foreignTable": "anomaly_analyses",
            "columnMapping": {
              "analysis_id": "id"
            }
          }
        },
        "description": null
      },
      "recommendations": {
        "schemaName": "public",
        "tableName": "recommendations",
        "columns": {
          "analysis_id": {
            "name": "analysis_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "recommendations_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "recommendations_analysis_id_fkey": {
            "foreignSchema": "public",
            "foreignTable": "anomaly_analyses",
            "columnMapping": {
              "analysis_id": "id"
            }
          }
        },
        "description": null
      },
      "statistical_flags": {
        "schemaName": "public",
        "tableName": "statistical_flags",
        "columns": {
          "analysis_id": {
            "name": "analysis_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "flag_type": {
            "name": "flag_type",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "severity": {
            "name": "severity",
            "type": {
              "scalarType": "float8"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "statistical_flags_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "statistical_flags_analysis_id_fkey": {
            "foreignSchema": "public",
            "foreignTable": "anomaly_analyses",
            "columnMapping": {
              "analysis_id": "id"
            }
          }
        },
        "description": null
      },
      "trained_models": {
        "schemaName": "public",
        "tableName": "trained_models",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "features_count": {
            "name": "features_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "last_updated": {
            "name": "last_updated",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "model_data": {
            "name": "model_data",
            "type": {
              "scalarType": "bytea"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "query_id": {
            "name": "query_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "records_count": {
            "name": "records_count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "trained_models_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "value_distributions": {
        "schemaName": "public",
        "tableName": "value_distributions",
        "columns": {
          "count": {
            "name": "count",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "field_statistic_id": {
            "name": "field_statistic_id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "value": {
            "name": "value",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "value_distributions_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "value_distributions_field_statistic_id_fkey": {
            "foreignSchema": "public",
            "foreignTable": "field_statistics",
            "columnMapping": {
              "field_statistic_id": "id"
            }
          }
        },
        "description": null
      }
    },
    "types": {
      "scalar": {
        "bool": {
          "typeName": "bool",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "bool_and": {
              "returnType": "bool"
            },
            "bool_or": {
              "returnType": "bool"
            },
            "every": {
              "returnType": "bool"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "bool",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "bool",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            }
          },
          "typeRepresentation": "boolean"
        },
        "bytea": {
          "typeName": "bytea",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {},
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            }
          },
          "typeRepresentation": null
        },
        "float8": {
          "typeName": "float8",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "float8"
            },
            "max": {
              "returnType": "float8"
            },
            "min": {
              "returnType": "float8"
            },
            "stddev": {
              "returnType": "float8"
            },
            "stddev_pop": {
              "returnType": "float8"
            },
            "stddev_samp": {
              "returnType": "float8"
            },
            "sum": {
              "returnType": "float8"
            },
            "var_pop": {
              "returnType": "float8"
            },
            "var_samp": {
              "returnType": "float8"
            },
            "variance": {
              "returnType": "float8"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "float8",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "float8",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            }
          },
          "typeRepresentation": "float64"
        },
        "int4": {
          "typeName": "int4",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "bit_and": {
              "returnType": "int4"
            },
            "bit_or": {
              "returnType": "int4"
            },
            "bit_xor": {
              "returnType": "int4"
            },
            "max": {
              "returnType": "int4"
            },
            "min": {
              "returnType": "int4"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "int8"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "int4",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "int4",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            }
          },
          "typeRepresentation": "int32"
        },
        "int8": {
          "typeName": "int8",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "bit_and": {
              "returnType": "int8"
            },
            "bit_or": {
              "returnType": "int8"
            },
            "bit_xor": {
              "returnType": "int8"
            },
            "max": {
              "returnType": "int8"
            },
            "min": {
              "returnType": "int8"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "numeric"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "int8",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "int8",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            }
          },
          "typeRepresentation": "int64AsString"
        },
        "numeric": {
          "typeName": "numeric",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "max": {
              "returnType": "numeric"
            },
            "min": {
              "returnType": "numeric"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "numeric"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            }
          },
          "typeRepresentation": "bigDecimalAsString"
        },
        "risklevel": {
          "typeName": "risklevel",
          "schemaName": "public",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "risklevel"
            },
            "min": {
              "returnType": "risklevel"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "risklevel",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "risklevel",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "risklevel",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "risklevel",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "risklevel",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "risklevel",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "risklevel",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH"
            ]
          }
        },
        "text": {
          "typeName": "text",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "text"
            },
            "min": {
              "returnType": "text"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "text",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_ilike": {
              "operatorName": "~~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "text",
              "isInfix": true
            },
            "_iregex": {
              "operatorName": "~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nilike": {
              "operatorName": "!~~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_niregex": {
              "operatorName": "!~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nregex": {
              "operatorName": "!~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_regex": {
              "operatorName": "~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "starts_with": {
              "operatorName": "starts_with",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            },
            "ts_match_tt": {
              "operatorName": "ts_match_tt",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            }
          },
          "typeRepresentation": "string"
        },
        "timestamptz": {
          "typeName": "timestamptz",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "timestamptz"
            },
            "min": {
              "returnType": "timestamptz"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            }
          },
          "typeRepresentation": "timestamptz"
        },
        "varchar": {
          "typeName": "varchar",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "text"
            },
            "min": {
              "returnType": "text"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_ilike": {
              "operatorName": "~~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_iregex": {
              "operatorName": "~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nilike": {
              "operatorName": "!~~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_niregex": {
              "operatorName": "!~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nregex": {
              "operatorName": "!~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_regex": {
              "operatorName": "~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "starts_with": {
              "operatorName": "starts_with",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": false
            },
            "ts_match_tt": {
              "operatorName": "ts_match_tt",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": false
            }
          },
          "typeRepresentation": "string"
        }
      },
      "composite": {}
    },
    "nativeOperations": {
      "queries": {},
      "mutations": {}
    }
  },
  "introspectionOptions": {
    "excludedSchemas": [
      "information_schema",
      "pg_catalog",
      "tiger",
      "crdb_internal",
      "columnar",
      "columnar_internal"
    ],
    "unqualifiedSchemasForTables": [
      "public"
    ],
    "unqualifiedSchemasForTypesAndProcedures": [
      "public",
      "pg_catalog",
      "tiger"
    ],
    "comparisonOperatorMapping": [
      {
        "operatorName": "=",
        "exposedName": "_eq",
        "operatorKind": "equal"
      },
      {
        "operatorName": "<=",
        "exposedName": "_lte",
        "operatorKind": "custom"
      },
      {
        "operatorName": ">",
        "exposedName": "_gt",
        "operatorKind": "custom"
      },
      {
        "operatorName": ">=",
        "exposedName": "_gte",
        "operatorKind": "custom"
      },
      {
        "operatorName": "<",
        "exposedName": "_lt",
        "operatorKind": "custom"
      },
      {
        "operatorName": "<>",
        "exposedName": "_neq",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!=",
        "exposedName": "_neq",
        "operatorKind": "custom"
      },
      {
        "operatorName": "LIKE",
        "exposedName": "_like",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT LIKE",
        "exposedName": "_nlike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "ILIKE",
        "exposedName": "_ilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT ILIKE",
        "exposedName": "_nilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "SIMILAR TO",
        "exposedName": "_similar",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT SIMILAR TO",
        "exposedName": "_nsimilar",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~~",
        "exposedName": "_like",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~~",
        "exposedName": "_nlike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~~*",
        "exposedName": "_ilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~~*",
        "exposedName": "_nilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~",
        "exposedName": "_regex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~",
        "exposedName": "_nregex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~*",
        "exposedName": "_iregex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~*",
        "exposedName": "_niregex",
        "operatorKind": "custom"
      }
    ],
    "introspectPrefixFunctionComparisonOperators": [
      "box_above",
      "box_below",
      "box_contain",
      "box_contain_pt",
      "box_contained",
      "box_left",
      "box_overabove",
      "box_overbelow",
      "box_overlap",
      "box_overleft",
      "box_overright",
      "box_right",
      "box_same",
      "circle_above",
      "circle_below",
      "circle_contain",
      "circle_contain_pt",
      "circle_contained",
      "circle_left",
      "circle_overabove",
      "circle_overbelow",
      "circle_overlap",
      "circle_overleft",
      "circle_overright",
      "circle_right",
      "circle_same",
      "contains_2d",
      "equals",
      "geography_overlaps",
      "geometry_above",
      "geometry_below",
      "geometry_contained_3d",
      "geometry_contains",
      "geometry_contains_3d",
      "geometry_contains_nd",
      "geometry_left",
      "geometry_overabove",
      "geometry_overbelow",
      "geometry_overlaps",
      "geometry_overlaps_3d",
      "geometry_overlaps_nd",
      "geometry_overleft",
      "geometry_overright",
      "geometry_right",
      "geometry_same",
      "geometry_same_3d",
      "geometry_same_nd",
      "geometry_within",
      "geometry_within_nd",
      "inet_same_family",
      "inter_lb",
      "inter_sb",
      "inter_sl",
      "is_contained_2d",
      "ishorizontal",
      "isparallel",
      "isperp",
      "isvertical",
      "jsonb_contained",
      "jsonb_contains",
      "jsonb_exists",
      "jsonb_path_exists_opr",
      "jsonb_path_match_opr",
      "line_intersect",
      "line_parallel",
      "line_perp",
      "lseg_intersect",
      "lseg_parallel",
      "lseg_perp",
      "network_overlap",
      "network_sub",
      "network_subeq",
      "network_sup",
      "network_supeq",
      "on_pb",
      "on_pl",
      "on_ppath",
      "on_ps",
      "on_sb",
      "on_sl",
      "overlaps_2d",
      "path_contain_pt",
      "path_inter",
      "point_above",
      "point_below",
      "point_horiz",
      "point_left",
      "point_right",
      "point_vert",
      "poly_above",
      "poly_below",
      "poly_contain",
      "poly_contain_pt",
      "poly_contained",
      "poly_left",
      "poly_overabove",
      "poly_overbelow",
      "poly_overlap",
      "poly_overleft",
      "poly_overright",
      "poly_right",
      "poly_same",
      "pt_contained_poly",
      "st_3dintersects",
      "st_contains",
      "st_containsproperly",
      "st_coveredby",
      "st_covers",
      "st_crosses",
      "st_disjoint",
      "st_equals",
      "st_intersects",
      "st_isvalid",
      "st_orderingequals",
      "st_overlaps",
      "st_relatematch",
      "st_touches",
      "st_within",
      "starts_with",
      "ts_match_qv",
      "ts_match_tq",
      "ts_match_tt",
      "ts_match_vq",
      "tsq_mcontained",
      "tsq_mcontains",
      "xmlexists",
      "xmlvalidate",
      "xpath_exists"
    ],
    "typeRepresentations": {
      "bit": "string",
      "bool": "boolean",
      "bpchar": "string",
      "char": "string",
      "date": "date",
      "float4": "float32",
      "float8": "float64",
      "int2": "int16",
      "int4": "int32",
      "int8": "int64AsString",
      "numeric": "bigDecimalAsString",
      "text": "string",
      "time": "time",
      "timestamp": "timestamp",
      "timestamptz": "timestamptz",
      "timetz": "timetz",
      "uuid": "uUID",
      "varchar": "string"
    }
  },
  "mutationsVersion": "v2",
  "mutationsPrefix": ""
}
